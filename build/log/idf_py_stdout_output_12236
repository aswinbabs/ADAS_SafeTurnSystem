[1/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/CANBusHandler.cpp.obj
[2/10] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Embedded\ADAS\ADAS_MASTER_ESP\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Embedded/ADAS/ADAS_MASTER_ESP/build/bootloader/bootloader.bin"
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[3/10] No install step for 'bootloader'
[4/10] Linking C static library esp-idf\main\libmain.a
[5/10] Completed 'bootloader'
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable ADAS_MASTER_ESP.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Embedded/ADAS/ADAS_MASTER_ESP/build/ADAS_MASTER_ESP.bin
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Embedded\ADAS\ADAS_MASTER_ESP\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Embedded/ADAS/ADAS_MASTER_ESP/build/partition_table/partition-table.bin C:/Embedded/ADAS/ADAS_MASTER_ESP/build/ADAS_MASTER_ESP.bin"
ADAS_MASTER_ESP.bin binary size 0x39b20 bytes. Smallest app partition is 0x100000 bytes. 0xc64e0 bytes (77%) free.
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.3.2\components\esptool_py && C:\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.3.2 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.3_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.3.2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Embedded/ADAS/ADAS_MASTER_ESP/build -P C:/Espressif/frameworks/esp-idf-v5.3.2/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM10 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 ADAS_MASTER_ESP.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port COM10
Connecting...
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: ec:64:c9:5d:0b:64
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00049fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26752 bytes to 16361...
Writing at 0x00001000... (100 %)
Wrote 26752 bytes (16361 compressed) at 0x00001000 in 0.8 seconds (effective 278.2 kbit/s)...
Hash of data verified.
Compressed 236320 bytes to 126693...
Writing at 0x00010000... (12 %)
Writing at 0x0001c75c... (25 %)
Writing at 0x00023ee9... (37 %)
Writing at 0x00029fe2... (50 %)
Writing at 0x000300a1... (62 %)
Writing at 0x0003781b... (75 %)
Writing at 0x0003f028... (87 %)
Writing at 0x00045166... (100 %)
Wrote 236320 bytes (126693 compressed) at 0x00010000 in 3.2 seconds (effective 590.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 356.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
